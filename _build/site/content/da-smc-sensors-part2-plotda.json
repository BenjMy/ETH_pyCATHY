{"kind":"Notebook","sha256":"ec85052f93d78a11c1b92233af2f8886cba283cfddfab3e419ccdc53c78dec34","slug":"da-smc-sensors-part2-plotda","location":"/notebook/DA_SMC_sensors_part2_plotDA.ipynb","dependencies":[],"frontmatter":{"title":"Working with pyCATHY and DA","subtitle":"PART2 - plotting the results","github":"https://github.com/BenjMy/ETH_pyCATHY/","authors":[{"nameParsed":{"literal":"Benjamin Mary","given":"Benjamin","family":"Mary"},"name":"Benjamin Mary","orcid":"0000-0001-7199-2885","corresponding":true,"email":"benjamin.mary@ica.csic.es","affiliations":["ICA-CSIC"],"id":"contributors-DA_SMC_sensors_part2_plotDA-generated-uid-0"}],"affiliations":[{"id":"ICA-CSIC","name":"ICA-CSIC"}],"date":"2024/04/12","license":{"content":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"subject":"Tutorial","kernelspec":{"name":"python3","language":"python","display_name":"Python 3 (ipykernel)"},"keywords":[],"exports":[{"format":"ipynb","filename":"DA_SMC_sensors_part2_plotDA.ipynb","url":"/DA_SMC_sensors_part2-ac6f9c7a59b72449a06711221fed4ee8.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The notebooks describe:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z0djXy80Nq"}],"key":"Z6vOJxrXOp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Plot outputs","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"K2DqgGWJvt"}],"key":"rV3g6JhDKH"},{"type":"text","value":": analysis of the results","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Fyp4R3Skj9"}],"key":"pEXiAvQOky"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Saturation with uncertainties","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"tTFc0Z7OCp"}],"identifier":"plot_states","label":"plot_states","kind":"heading","template":"{name}","resolved":true,"html_id":"plot-states","remote":true,"url":"/da-ert-part3-results-archie-inprogress","dataUrl":"/da-ert-part3-results-archie-inprogress.json","key":"D5yAqNZUXG"}],"key":"xPMt3wBMaX"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Parameters convergence","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EjqRGczeOo"}],"identifier":"parm_evol","label":"Parm_evol","kind":"heading","template":"{name}","resolved":true,"html_id":"parm-evol","remote":true,"url":"/da-ert-part3-results-archie-inprogress","dataUrl":"/da-ert-part3-results-archie-inprogress.json","key":"OYmA2CluVq"}],"key":"YB60cwISdU"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Assimilation performance","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HGR9gNtFHP"}],"identifier":"da_perf","label":"DA_perf","kind":"heading","template":"{name}","resolved":true,"html_id":"da-perf","remote":true,"url":"/da-ert-part3-results-archie-inprogress","dataUrl":"/da-ert-part3-results-archie-inprogress.json","key":"CdmzOHkWJ4"}],"key":"QcBWSKynV4"}],"key":"IECvjyaVSb"}],"key":"QO2RRK3zPK"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import pyCATHY\nfrom pyCATHY import cathy_tools\nfrom pyCATHY.DA.cathy_DA import DA, dictObs_2pd\nfrom pyCATHY.DA.perturbate import perturbate_parm\nfrom pyCATHY.DA import perturbate\nfrom pyCATHY.DA.observations import read_observations, prepare_observations, make_data_cov\nfrom pyCATHY.DA import performance\nimport pyvista as pv\nimport pyCATHY.plotters.cathy_plots as cplt \nimport os \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n# set some default plotting parameters for nicer looking plots\nmpl.rcParams.update({\"axes.grid\":True, \n                     \"grid.color\":\"gray\", \n                     \"grid.linestyle\":'--',\n                     'figure.figsize':(6,6)}\n                   )\nimport pandas as pd","key":"Ttu0r0cSir"},{"type":"output","id":"qM3jnPhq6Sdmd9fOq66L4","data":[],"key":"RTFCILMHWr"}],"key":"FqiKlkZcyP"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Analysis of the results","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"xREnOji4Uq"}],"identifier":"plot_results","label":"plot_results","html_id":"plot-results","key":"ZB2SrdezM9"}],"key":"UsxvO9ZGEG"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reload solution","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NH2vFWPCqO"}],"identifier":"reload-solution","label":"Reload solution","html_id":"reload-solution","implicit":true,"key":"l0Z6eSOKjb"}],"key":"YiQtiuCHxz"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"simu_solution = cathy_tools.CATHY(\n                                    dirName='./solution_SMC',\n                                    prj_name= 'weill_dataset',\n                                    notebook=True,\n                                  )\nsw_SOL, sw_SOL_times = simu_solution.read_outputs('sw')\npsi_SOL = simu_solution.read_outputs('psi')\n\nrootMap, rootMap_hd = simu_solution.read_inputs('root_map')\n\nsoil_SPP_SOL, soil_FP_SOL = simu_solution.read_inputs('soil',\n                                                         MAXVEG=int(np.max(rootMap)),\n                                                    )\nPERMX_SOL = soil_SPP_SOL['PERMX'].unique()[0]\nPOROS_SOL = soil_SPP_SOL['POROS'].unique()[0]","key":"ffLADST3Gt"},{"type":"output","id":"e7czAT_y4ReuvGP41IoZj","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">üèÅ <span style=\"font-weight: bold\">Initiate CATHY object</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"üèÅ \u001b[1mInitiate CATHY object\u001b[0m\n","content_type":"text/plain"}}}],"key":"oGItamEDGf"}],"key":"IrUTyrZuuk"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"pl = pv.Plotter(notebook=True)\ncplt.show_vtk(unit=\"pressure\", \n              timeStep=5, \n              path=simu_solution.workdir + \"/weill_dataset/vtk/\",\n              ax=pl,\n              )\npl.show()","key":"dY6JP6J74r"},{"type":"output","id":"qC-ZrNEZ-92gRbe73YBVP","data":[{"name":"stdout","output_type":"stream","text":"plot pressure\n"},{"output_type":"display_data","metadata":{},"data":{"image/jpeg":{"content_type":"image/jpeg","hash":"3297077f7c2d363ad944c99c58c5fb62","path":"/3297077f7c2d363ad944c99c58c5fb62.jpeg"},"image/png":{"content_type":"image/png","hash":"bdf92b9ffa9f61129d0ab0c301faecca","path":"/bdf92b9ffa9f61129d0ab0c301faecca.png"},"text/plain":{"content":"<PIL.Image.Image image mode=RGB size=1024x768>","content_type":"text/plain"}}}],"key":"s4duw45qHm"}],"key":"FCFISWDVOt"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reload DA results","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"z7oRzfOr4X"}],"identifier":"reload-da-results","label":"Reload DA results","html_id":"reload-da-results","implicit":true,"key":"msk6PHfPyA"}],"key":"hBXgZglKg6"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"simuWithDA = DA(\n                        dirName='./DA_SMC',\n                        prj_name= 'SMC_withDA',\n                        notebook=True,\n                    )\nsimuWithoutDA = DA(\n                        dirName='./DA_SMC',\n                        prj_name= 'SMC_withoutDA',\n                        notebook=True,\n                    )","key":"LEsN8GFIwu"},{"type":"output","id":"8gRxXse2BprypTQpvXaub","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">üèÅ <span style=\"font-weight: bold\">Initiate CATHY object</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"üèÅ \u001b[1mInitiate CATHY object\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">üèÅ <span style=\"font-weight: bold\">Initiate CATHY object</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"üèÅ \u001b[1mInitiate CATHY object\u001b[0m\n","content_type":"text/plain"}}}],"key":"cy5XkEBTXM"}],"key":"Lu3Xitangv"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"results_withDA = simuWithDA.load_pickle_backup()\nresults_withoutDA = simuWithoutDA.load_pickle_backup()","key":"w674arSjTn"},{"type":"output","id":"T35KF_67-d0CuqVfOgnnK","data":[],"key":"oYooyuF6bx"}],"key":"a3Y4533WNt"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"observations = dictObs_2pd(results_withDA['dict_obs'])","key":"tAoEDc46aS"},{"type":"output","id":"pRYXHa8qwDkEbDMBbNLZg","data":[],"key":"F8h23fRK4D"}],"key":"ju8hPxcbbL"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots()\nobservations.xs('swc',level=0).plot(y='data',ax=ax,label='swc')\nobservations.xs('swc1',level=0).plot(y='data',ax=ax,label='swc1')\nobservations.xs('swc2',level=0).plot(y='data',ax=ax)\n#observations.xs('swc3',level=0).plot(y='data',ax=ax)","key":"q9xPoeOFoN"},{"type":"output","id":"BWDjIYOn2AVvZy-lwLLyP","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"<Axes: xlabel='assimilation time'>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1184c25db1ab729436475c826261ad1e","path":"/1184c25db1ab729436475c826261ad1e.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"ZnyuwrOirB"}],"key":"wDrb9mgbxO"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"assimilation_times = observations.index.get_level_values(1).unique().to_list()","key":"ZbW8jaDI7C"},{"type":"output","id":"X5wHPUBuMkD2M6ad_Yqcv","data":[],"key":"rokwTqFmN5"}],"key":"kLAIXOMSwh"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"nodes_of_interest = observations.mesh_nodes\nnodes_of_interest = list(np.hstack(np.unique(nodes_of_interest)))\nnodes_of_interest","key":"nmrweJU4AH"},{"type":"output","id":"aaz3pZ6LQogpwJ0RrDJEh","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/plain":{"content":"[2908, 3790, 5113]","content_type":"text/plain"}}}],"key":"PhfPZH6fHN"}],"key":"nTGtNxlg3k"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#nodes_of_interest_pos\n#sensors_pos = infiltration_util.get_sensors_pos()","key":"IHTD6wFAHt"},{"type":"output","id":"LvYI3fXh9TEXmib7d9fTy","data":[],"key":"yqrSPUL9Ps"}],"key":"BUvQJHDhzu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Plot model saturation with uncertainties","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HMTvJ1biq0"}],"identifier":"plot_states","label":"plot_states","html_id":"plot-states","key":"Kn0Hd2LEeb"}],"key":"gnq3BVFQUo"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"parm_df = pd.DataFrame.from_dict(results_withDA['dict_parm_pert'],\n                                 orient='index').T","key":"nuuLdBYbdr"},{"type":"output","id":"Dy8cNLOMS73tmMqR-iobK","data":[],"key":"QRNFd8HzHn"}],"key":"Q5he7szqWF"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots()\nax.hist(parm_df['ic']['ini_perturbation'])","key":"qpEU3n1OWt"},{"type":"output","id":"rDXGQ0tUdHP0z3cNTVqQf","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"(array([2., 0., 2., 3., 4., 3., 2., 3., 2., 3.]),\n array([-5.02769272, -4.31958139, -3.61147006, -2.90335873, -2.1952474 ,\n        -1.48713607, -0.77902474, -0.0709134 ,  0.63719793,  1.34530926,\n         2.05342059]),\n <BarContainer object of 10 artists>)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3bb7e3696bf16892ac85cb82c2eb9437","path":"/3bb7e3696bf16892ac85cb82c2eb9437.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"ZIQBYeGICD"}],"key":"DXpJT2S3iN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#obs2plot = observations.xs('swc',level=0)\nobs2plot = observations\nobs2plot['saturation'] = obs2plot['data']/POROS_SOL","key":"TrYgPte3iw"},{"type":"output","id":"eOvhslOdC07IPOHMuR6co","data":[],"key":"emSaTdtWnK"}],"key":"m4ueWjDCQB"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"unique_times = results_withDA['df_DA'][\"time\"].unique() -1\nresults_withDA['df_DA'][\"assimilation_times\"] = results_withDA['df_DA'][\"time\"].map(dict(zip(unique_times, \n                                                                               assimilation_times))\n                                                                     )","key":"hCTEK7zwBJ"},{"type":"output","id":"Of2jRp68uEehuJknpYWOA","data":[],"key":"BAkQgrvWp1"}],"key":"ePsGBzi14s"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, axs = plt.subplots(1,3,figsize=(15,4),\n                       sharey=True\n                       )\nfor axi, NOI in zip(axs, nodes_of_interest):\n    cplt.DA_plot_time_dynamic(results_withDA['df_DA'],\n                              'sw',\n                              NOI,\n                              ax=axi,\n                              keytime='assimilation_times',\n                              )  \n    axi.plot(sw_SOL_times,\n            sw_SOL.iloc[:,NOI],\n            color='r',\n            marker= '.'\n            )\n    \n    \nobservations.xs('swc',level=0).plot(y='saturation',ax=axs[0],label='swc')\nobservations.xs('swc1',level=0).plot(y='saturation',ax=axs[1],label='swc1')\nobservations.xs('swc2',level=0).plot(y='saturation',ax=axs[2])\n\n","key":"ixFnYEJ4t4"},{"type":"output","id":"IvznPiBm3D1IvN4OJHvLD","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"<Axes: xlabel='assimilation time', ylabel='water saturation (-)'>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fb1ad35307b11b0b79aacf623bfb8e68","path":"/fb1ad35307b11b0b79aacf623bfb8e68.png"},"text/plain":{"content":"<Figure size 1500x400 with 3 Axes>","content_type":"text/plain"}}}],"key":"WIF9vGJwgD"}],"key":"TlGkfW8942"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"unique_times = results_withoutDA['df_DA'][\"time\"].unique() -1\nresults_withoutDA['df_DA'][\"assimilation_times\"] = results_withoutDA['df_DA'][\"time\"].map(dict(zip(unique_times, \n                                                                               assimilation_times))\n                                                                     )","key":"zDKIAcE4Xe"},{"type":"output","id":"x7ogudweL1Xd2Rh2Qoo5r","data":[],"key":"xMebOdcyGt"}],"key":"ER1wlpgAxx"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, axs = plt.subplots(1,3,figsize=(15,3),\n                       sharey=True\n                       )\nfor axi, NOI in zip(axs, nodes_of_interest):\n    cplt.DA_plot_time_dynamic(results_withoutDA['df_DA'],\n                              'sw',\n                              NOI,\n                              ax=axi,\n                              keytime='assimilation_times',\n                              )  \n    axi.plot(sw_SOL_times,\n            sw_SOL.iloc[:,NOI],\n            color='r',\n            marker= '.'\n            )\n    \n    \nobservations.xs('swc',level=0).plot(y='saturation',ax=axs[0],label='swc')\nobservations.xs('swc1',level=0).plot(y='saturation',ax=axs[1],label='swc1')\nobservations.xs('swc2',level=0).plot(y='saturation',ax=axs[2])\n","key":"O5CQohrt8P"},{"type":"output","id":"aDAqfzlEbD-H6smL1zUsM","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"<Axes: xlabel='assimilation time', ylabel='water saturation (-)'>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"72264011b7a4494540c83186ce88aad9","path":"/72264011b7a4494540c83186ce88aad9.png"},"text/plain":{"content":"<Figure size 1500x300 with 3 Axes>","content_type":"text/plain"}}}],"key":"YDuWrXKcvf"}],"key":"K1yl5AHv2s"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Plot DA performance","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"h8qnFRKNl0"}],"identifier":"da_perf","label":"DA_perf","html_id":"da-perf","key":"gRVonD48rB"}],"key":"wLQUSmxBks"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(2,figsize=[11,4])\ncplt.DA_RMS(results_withDA['df_performance'],'swc',ax=ax)\ncplt.DA_RMS(results_withDA['df_performance'],'swc1',ax=ax)\ncplt.DA_RMS(results_withDA['df_performance'],'swc2',ax=ax)","key":"ddzToY364T"},{"type":"output","id":"fc2fbGKsSX3tYXPSXa11I","data":[{"name":"stderr","output_type":"stream","text":"/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1455: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"RMSE\" + sensorName] = df_perf_plot[\"RMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1458: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"NMRMSE\" + sensorName] = df_perf_plot[\"NMRMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1461: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.OL = df_perf_plot.OL.astype(\"str\")\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1462: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.dropna(inplace=True)\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1455: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"RMSE\" + sensorName] = df_perf_plot[\"RMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1458: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"NMRMSE\" + sensorName] = df_perf_plot[\"NMRMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1461: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.OL = df_perf_plot.OL.astype(\"str\")\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1462: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.dropna(inplace=True)\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1455: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"RMSE\" + sensorName] = df_perf_plot[\"RMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1458: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"NMRMSE\" + sensorName] = df_perf_plot[\"NMRMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1461: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.OL = df_perf_plot.OL.astype(\"str\")\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1462: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.dropna(inplace=True)\n"},{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"(array([<Axes: xlabel='assimilation #', ylabel='RMSEswc2'>,\n        <Axes: xlabel='assimilation #', ylabel='NMRMSEswc2'>], dtype=object),\n <module 'matplotlib.pyplot' from '/home/z0272571a@CAMPUS.CSIC.ES/miniconda3/envs/pgCATHY/lib/python3.11/site-packages/matplotlib/pyplot.py'>)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"2689e1eef5e587289812340b58a9e5de","path":"/2689e1eef5e587289812340b58a9e5de.png"},"text/plain":{"content":"<Figure size 1100x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"Mfli7x1i6w"}],"key":"AwYYzQ0Hjo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Plot parameters convergence","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"xFqQ2D625F"}],"identifier":"parm_evol","label":"Parm_evol","html_id":"parm-evol","key":"Gb3jPLvRnc"}],"key":"fHDgNyQEvp"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, axs = plt.subplots(2,1,figsize=[11,4],\n                        # sharex=True\n                        )\ncplt.DA_plot_parm_dynamic_scatter(parm = 'ZROOT', \n                                  dict_parm_pert=results_withDA['dict_parm_pert'], \n                                  list_assimilation_times = assimilation_times,\n                                  ax=axs[0],\n                                          )   \naxs[0].plot(np.linspace(1,len(assimilation_times), len(assimilation_times)),\n            [POROS_SOL]*len(assimilation_times))\n","key":"zfUOL73L6S"},{"type":"output","id":"wvQ5DV_psE6eN-gY20V64","data":[{"ename":"KeyError","evalue":"'ZROOT'","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)\nCell \u001b[0;32mIn[19], line 4\u001b[0m\n\u001b[1;32m      1\u001b[0m fig, axs \u001b[38;5;241m=\u001b[39m plt\u001b[38;5;241m.\u001b[39msubplots(\u001b[38;5;241m2\u001b[39m,\u001b[38;5;241m1\u001b[39m,figsize\u001b[38;5;241m=\u001b[39m[\u001b[38;5;241m11\u001b[39m,\u001b[38;5;241m4\u001b[39m],\n\u001b[1;32m      2\u001b[0m                         \u001b[38;5;66;03m# sharex=True\u001b[39;00m\n\u001b[1;32m      3\u001b[0m                         )\n\u001b[0;32m----> 4\u001b[0m cplt\u001b[38;5;241m.\u001b[39mDA_plot_parm_dynamic_scatter(parm \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mZROOT\u001b[39m\u001b[38;5;124m'\u001b[39m, \n\u001b[1;32m      5\u001b[0m                                   dict_parm_pert\u001b[38;5;241m=\u001b[39mresults_withDA[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdict_parm_pert\u001b[39m\u001b[38;5;124m'\u001b[39m], \n\u001b[1;32m      6\u001b[0m                                   list_assimilation_times \u001b[38;5;241m=\u001b[39m assimilation_times,\n\u001b[1;32m      7\u001b[0m                                   ax\u001b[38;5;241m=\u001b[39maxs[\u001b[38;5;241m0\u001b[39m],\n\u001b[1;32m      8\u001b[0m                                           )   \n\u001b[1;32m      9\u001b[0m axs[\u001b[38;5;241m0\u001b[39m]\u001b[38;5;241m.\u001b[39mplot(np\u001b[38;5;241m.\u001b[39mlinspace(\u001b[38;5;241m1\u001b[39m,\u001b[38;5;28mlen\u001b[39m(assimilation_times), \u001b[38;5;28mlen\u001b[39m(assimilation_times)),\n\u001b[1;32m     10\u001b[0m             [POROS_SOL]\u001b[38;5;241m*\u001b[39m\u001b[38;5;28mlen\u001b[39m(assimilation_times))\n\nFile \u001b[0;32m~/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1538\u001b[0m, in \u001b[0;36mDA_plot_parm_dynamic_scatter\u001b[0;34m(parm, dict_parm_pert, list_assimilation_times, savefig, **kwargs)\u001b[0m\n\u001b[1;32m   1534\u001b[0m     fig \u001b[38;5;241m=\u001b[39m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m6\u001b[39m, \u001b[38;5;241m3\u001b[39m), dpi\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m350\u001b[39m)\n\u001b[1;32m   1535\u001b[0m     ax \u001b[38;5;241m=\u001b[39m fig\u001b[38;5;241m.\u001b[39madd_subplot()\n\u001b[0;32m-> 1538\u001b[0m ensemble_size \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlen\u001b[39m(dict_parm_pert[parm][\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mini_perturbation\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[1;32m   1539\u001b[0m mean_t \u001b[38;5;241m=\u001b[39m [np\u001b[38;5;241m.\u001b[39mmean(dict_parm_pert[parm][\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mini_perturbation\u001b[39m\u001b[38;5;124m\"\u001b[39m])]\n\u001b[1;32m   1540\u001b[0m mean_t_yaxis \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mmean(dict_parm_pert[parm][\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mini_perturbation\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\n\u001b[0;31mKeyError\u001b[0m: 'ZROOT'"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ebc87f1ed33185c0dc04973d5bb38aa4","path":"/ebc87f1ed33185c0dc04973d5bb38aa4.png"},"text/plain":{"content":"<Figure size 1100x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"VOaWz2xwfa"}],"key":"gAMJVc8vT6"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"","key":"DA89af2NbX"},{"type":"output","id":"Rx3FPFERIX-_dZKTvo7yI","data":[],"key":"r9sahOSRjz"}],"key":"vRKiVjSUK7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"","key":"eWdEGpc9Vd"},{"type":"output","id":"dN6zsRoxvCiqDLP-Zu126","data":[],"key":"dILzz8zuhx"}],"key":"oRjZWazCaR"}],"key":"F9LQLymCdX"},"references":{"cite":{"order":[],"data":{}}}}