{"kind":"Notebook","sha256":"fec556f41f4b4cedb86de525f720d7f376da206c9dfece430aed214258ac1e8e","slug":"da-swc-ert-performance","location":"/notebook/DA_SWC_ERT_performance.ipynb","dependencies":[],"frontmatter":{"title":"Working with pyCATHY and DA","subtitle":"PART4 - Comparison SWC and ERT performance","github":"https://github.com/BenjMy/ETH_pyCATHY/","authors":[{"nameParsed":{"literal":"Benjamin Mary","given":"Benjamin","family":"Mary"},"name":"Benjamin Mary","orcid":"0000-0001-7199-2885","corresponding":true,"email":"benjamin.mary@ica.csic.es","affiliations":["ICA-CSIC"],"id":"contributors-DA_SWC_ERT_performance-generated-uid-0"}],"affiliations":[{"id":"ICA-CSIC","name":"ICA-CSIC"}],"date":"2024/04/12","license":{"content":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"subject":"Tutorial","kernelspec":{"name":"python3","language":"python","display_name":"Python 3 (ipykernel)"},"keywords":[],"exports":[{"format":"ipynb","filename":"DA_SWC_ERT_performance.ipynb","url":"/DA_SWC_ERT_performan-6ed77183db9b7a54f6b51804c67ed9bc.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The notebooks describe:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rNLmkngzHn"}],"key":"buTQdyaheB"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Plot outputs","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Vj6IkrfNaI"}],"key":"hCurCUmO0s"},{"type":"text","value":": analysis of the results","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"p18zFDrR0j"}],"key":"V7dDMDjCzU"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Saturation with uncertainties","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Ps8n7SggXL"}],"identifier":"plot_states","label":"plot_states","kind":"heading","template":"{name}","resolved":true,"html_id":"plot-states","remote":true,"url":"/da-ert-part3-results-archie-inprogress","dataUrl":"/da-ert-part3-results-archie-inprogress.json","key":"LsF0RpNetD"}],"key":"Zq5mojkzDo"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Parameters convergence","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"i5H9xw0nZz"}],"identifier":"parm_evol","label":"Parm_evol","kind":"heading","template":"{name}","resolved":true,"html_id":"parm-evol","remote":true,"url":"/da-ert-part3-results-archie-inprogress","dataUrl":"/da-ert-part3-results-archie-inprogress.json","key":"eoUQW5iiWI"}],"key":"eZ1hmcr5mp"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Assimilation performance","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"jgHmKqFIrw"}],"identifier":"da_perf","label":"DA_perf","kind":"heading","template":"{name}","resolved":true,"html_id":"da-perf","remote":true,"url":"/da-ert-part3-results-archie-inprogress","dataUrl":"/da-ert-part3-results-archie-inprogress.json","key":"FTeueTkQEG"}],"key":"bPpzV8W1y6"}],"key":"oUmLQVFmBJ"}],"key":"AfUI98b2Rq"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import pyCATHY\nfrom pyCATHY import cathy_tools\nfrom pyCATHY.DA.cathy_DA import DA, dictObs_2pd\nfrom pyCATHY.DA.perturbate import perturbate_parm\nfrom pyCATHY.DA import perturbate\nfrom pyCATHY.DA.observations import read_observations, prepare_observations, make_data_cov\nfrom pyCATHY.DA import performance\nimport pyvista as pv\nimport pyCATHY.plotters.cathy_plots as cplt \nimport os \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n# set some default plotting parameters for nicer looking plots\nmpl.rcParams.update({\"axes.grid\":True, \n                     \"grid.color\":\"gray\", \n                     \"grid.linestyle\":'--',\n                     'figure.figsize':(6,6)}\n                   )\nimport pandas as pd\nimport utils","key":"NMk5SANQco"},{"type":"output","id":"jgHwQN-s4IjmNP3WrwkzO","data":[],"key":"VJNy266j46"}],"key":"VoPCuL7lXV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Analysis of the results","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YpbGzOOPqo"}],"identifier":"plot_results","label":"plot_results","html_id":"plot-results","key":"j2nMxffl64"}],"key":"tP7Xtcnlxm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reload solution","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JkS3900pTS"}],"identifier":"reload-solution","label":"Reload solution","html_id":"reload-solution","implicit":true,"key":"TDonGnaDdf"}],"key":"L0ctzqCizU"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"simu_solution = cathy_tools.CATHY(\n                                    dirName='./solution_ERT',\n                                    prj_name= 'weill_dataset',\n                                    notebook=True,\n                                  )\nsw_SOL, sw_SOL_times = simu_solution.read_outputs('sw')\npsi_SOL = simu_solution.read_outputs('psi')\n\nrootMap, rootMap_hd = simu_solution.read_inputs('root_map')\n\nsoil_SPP_SOL, soil_FP_SOL = simu_solution.read_inputs('soil',\n                                                         MAXVEG=int(np.max(rootMap)),\n                                                    )\nPERMX_SOL = soil_SPP_SOL['PERMX'].unique()[0]\nPOROS_SOL = soil_SPP_SOL['POROS'].unique()[0]","key":"MTbalNfnOn"},{"type":"output","id":"hTLq_2gKaYH0mqvNWzix5","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">üèÅ <span style=\"font-weight: bold\">Initiate CATHY object</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"üèÅ \u001b[1mInitiate CATHY object\u001b[0m\n","content_type":"text/plain"}}}],"key":"PLFSAHO2O2"}],"key":"rYdCGFVgMf"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reload DA results","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ymwTdLdGyb"}],"identifier":"reload-da-results","label":"Reload DA results","html_id":"reload-da-results","implicit":true,"key":"wOUz4dq60X"}],"key":"kA0Dt7XdR6"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"simuWith_SMC_DA = DA(\n                        dirName='./DA_SMC',\n                        prj_name= 'Weill_example_withDA',\n                        notebook=True,\n                    )\nsimuWith_ERT_DA = DA(\n                        dirName='./DA_ERT',\n                        prj_name= 'Weill_example_withoutDA',\n                        notebook=True,\n                    )","key":"fyTMpG93EC"},{"type":"output","id":"OObtLVXEJikD95biOBFL-","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">üèÅ <span style=\"font-weight: bold\">Initiate CATHY object</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"üèÅ \u001b[1mInitiate CATHY object\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">üèÅ <span style=\"font-weight: bold\">Initiate CATHY object</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"üèÅ \u001b[1mInitiate CATHY object\u001b[0m\n","content_type":"text/plain"}}}],"key":"xXGH9ABfNx"}],"key":"bJV91uQ6NU"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"results_with_SMC_DA = simuWith_SMC_DA.load_pickle_backup()\nresults_with_ERT_DA = simuWith_ERT_DA.load_pickle_backup()","key":"ddeBRXtH30"},{"type":"output","id":"Zh0-HRFiilMi4xGf9zK_W","data":[],"key":"pmp3rGsnLj"}],"key":"tWQSEaQEdy"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"meshCiPG_PGref = pv.read('./solution_ERT/meshCi.vtk')\nmeshLiPG_PGref = pv.read('./solution_ERT/meshLi.vtk')\n\nyshift = 8\nxshift = 8\n\n(meshCiPG, meshLiPG) = utils.define_mesh_transformations(meshCiPG_PGref,\n                                                          meshLiPG_PGref,\n                                                          idC=yshift, \n                                                          idL=xshift,\n                                                        )\npt1, _ = simu_solution.find_nearest_node([0,yshift,meshLiPG.points[:,2].max()])\npt2, _ = simu_solution.find_nearest_node([5,yshift,meshLiPG.points[:,2].max()])\npt3, _ = simu_solution.find_nearest_node([10,yshift,meshLiPG.points[:,2].max()])\nnodes_of_interest = [pt1,pt2,pt3]\nnodes_of_interest","key":"eSXwbhP6oj"},{"type":"output","id":"llqFhHYvzza9W_ZmgzWBf","data":[{"output_type":"execute_result","execution_count":57,"metadata":{},"data":{"text/plain":{"content":"[[2730], [976], [104]]","content_type":"text/plain"}}}],"key":"YAzP20JsaB"}],"key":"lrb0QcThBk"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"pl = pv.Plotter(notebook=True)\n\nmesh = pv.read(os.path.join(simu_solution.workdir,\n                            simu_solution.project_name,\n                                'vtk/100.vtk',\n                               )\n       )\n\npl.add_mesh(mesh,\n           opacity=0.2,\n           style=\"wireframe\",\n           )\n\nfor nn in nodes_of_interest:\n    pl.add_points(mesh.points[nn],\n                  color='red',\n                  render_points_as_spheres=True,\n                  point_size=10\n                  )\npl.show()","key":"mBePmxhDQR"},{"type":"output","id":"BKzD9mc8V15WlWSo7FaBP","data":[{"output_type":"display_data","metadata":{},"data":{"image/jpeg":{"content_type":"image/jpeg","hash":"7bc3c423c919c3ff045699e64a70e1cf","path":"/7bc3c423c919c3ff045699e64a70e1cf.jpeg"},"image/png":{"content_type":"image/png","hash":"e346db82bf176cd056933173b17b81de","path":"/e346db82bf176cd056933173b17b81de.png"},"text/plain":{"content":"<PIL.Image.Image image mode=RGB size=1024x768>","content_type":"text/plain"}}}],"key":"tdLrogPnrz"}],"key":"SlCQb8w3jr"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"df_sw, sw_times = simu_solution.read_outputs('sw')\n\nfig, ax = plt.subplots()\nfor nn in nodeIds:\n    ax.plot(df_sw.index,\n            df_sw[nn],\n            label=nn\n            )\nax.set_xlabel('Time (s)')\nax.set_ylabel('Saturation (-)')\nplt.legend()\n","key":"vQfUeNvqLB"},{"type":"output","id":"L-pxLTs8vYY_Nyzi0bguG","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d370969dc0716773686d53c4df1f5fce","path":"/d370969dc0716773686d53c4df1f5fce.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"SVgkoAgZsf"}],"key":"eaXPVbp27F"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"assimilation_times = observations.index.get_level_values(1).unique().to_list()\nassimilation_times","key":"QJmWVpJ2Sm"},{"type":"output","id":"XqWqIPlt-y0Wt0CY2B2Ol","data":[{"output_type":"execute_result","execution_count":61,"metadata":{},"data":{"text/plain":{"content":"[0.0,\n 9600.0,\n 19200.0,\n 28800.0,\n 38400.0,\n 48000.0,\n 57600.0,\n 67200.0,\n 76800.0,\n 86400.0]","content_type":"text/plain"}}}],"key":"fXA7kdFCY9"}],"key":"AJ1fNLRa5q"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Plot model saturation with uncertainties","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"F4faltnVCW"}],"identifier":"plot_states","label":"plot_states","html_id":"plot-states","key":"xPzQpoLEtx"}],"key":"YIKkjEhoJz"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"parm_df = pd.DataFrame.from_dict(results_withDA['dict_parm_pert'],\n                                 orient='index').T\nparm_df","key":"SjX5rqO5JI"},{"type":"output","id":"pqStBl2okQszLjfEAusYn","data":[{"output_type":"execute_result","execution_count":63,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ic</th>\n      <th>ZROOT0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>type_parm</th>\n      <td>ic</td>\n      <td>ZROOT0</td>\n    </tr>\n    <tr>\n      <th>nominal</th>\n      <td>-1.0</td>\n      <td>0.4</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>-1.0</td>\n      <td>0.4</td>\n    </tr>\n    <tr>\n      <th>sd</th>\n      <td>1.75</td>\n      <td>0.005</td>\n    </tr>\n    <tr>\n      <th>units</th>\n      <td>pressure head $(m)$</td>\n      <td>$m$</td>\n    </tr>\n    <tr>\n      <th>sampling_type</th>\n      <td>normal</td>\n      <td>normal</td>\n    </tr>\n    <tr>\n      <th>ensemble_size</th>\n      <td>3</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>per_type</th>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>savefig</th>\n      <td>ic.png</td>\n      <td>ZROOT0.png</td>\n    </tr>\n    <tr>\n      <th>sampling_mean</th>\n      <td>-1.0</td>\n      <td>0.4</td>\n    </tr>\n    <tr>\n      <th>sampling_sd</th>\n      <td>1.75</td>\n      <td>0.005</td>\n    </tr>\n    <tr>\n      <th>ini_perturbation</th>\n      <td>[1.842604386410673, -2.070573723887632, -1.924...</td>\n      <td>[0.39869138462027526, 0.40048726578752897, 0.3...</td>\n    </tr>\n    <tr>\n      <th>sampling</th>\n      <td>[1.842604386410673, -2.070573723887632, -1.924...</td>\n      <td>[0.39869138462027526, 0.40048726578752897, 0.3...</td>\n    </tr>\n    <tr>\n      <th>transf_type</th>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>surf_zones_param</th>\n      <td>NaN</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>clip_min</th>\n      <td>NaN</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>clip_max</th>\n      <td>NaN</td>\n      <td>1.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"                                                                 ic  \\\ntype_parm                                                        ic   \nnominal                                                        -1.0   \nmean                                                           -1.0   \nsd                                                             1.75   \nunits                                           pressure head $(m)$   \nsampling_type                                                normal   \nensemble_size                                                     3   \nper_type                                                       None   \nsavefig                                                      ic.png   \nsampling_mean                                                  -1.0   \nsampling_sd                                                    1.75   \nini_perturbation  [1.842604386410673, -2.070573723887632, -1.924...   \nsampling          [1.842604386410673, -2.070573723887632, -1.924...   \ntransf_type                                                    None   \nsurf_zones_param                                                NaN   \nclip_min                                                        NaN   \nclip_max                                                        NaN   \n\n                                                             ZROOT0  \ntype_parm                                                    ZROOT0  \nnominal                                                         0.4  \nmean                                                            0.4  \nsd                                                            0.005  \nunits                                                           $m$  \nsampling_type                                                normal  \nensemble_size                                                     3  \nper_type                                                       None  \nsavefig                                                  ZROOT0.png  \nsampling_mean                                                   0.4  \nsampling_sd                                                   0.005  \nini_perturbation  [0.39869138462027526, 0.40048726578752897, 0.3...  \nsampling          [0.39869138462027526, 0.40048726578752897, 0.3...  \ntransf_type                                                    None  \nsurf_zones_param                                                0.0  \nclip_min                                                        0.0  \nclip_max                                                        1.5  ","content_type":"text/plain"}}}],"key":"xr6VxhWfhO"}],"key":"WPPXgv5v40"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots()\nax.hist(parm_df['ic']['ini_perturbation'])","key":"N6CyuCv7Fi"},{"type":"output","id":"J5m3bqMFXb2sn0k9Ociks","data":[{"output_type":"execute_result","execution_count":64,"metadata":{},"data":{"text/plain":{"content":"(array([2., 0., 0., 0., 0., 0., 0., 0., 0., 1.]),\n array([-2.07057372, -1.67925591, -1.2879381 , -0.89662029, -0.50530248,\n        -0.11398467,  0.27733314,  0.66865095,  1.05996876,  1.45128658,\n         1.84260439]),\n <BarContainer object of 10 artists>)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"cdc3b74f8a1e95aae97d3f331415ce30","path":"/cdc3b74f8a1e95aae97d3f331415ce30.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"TLeKPCkG5U"}],"key":"ptDGsVeUPu"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#obs2plot = observations.xs('swc',level=0)\nobs2plot = observations\nobs2plot['saturation'] = obs2plot['data']/POROS_SOL","key":"xMiVMgSEdw"},{"type":"output","id":"_ySx4brpJIOz4X8Qy8yhO","data":[],"key":"lOyBBhE1eR"}],"key":"qVXlBleD9y"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"unique_times = results_withDA['df_DA'][\"time\"].unique() -1\nresults_withDA['df_DA'][\"assimilation_times\"] = results_withDA['df_DA'][\"time\"].map(dict(zip(unique_times, \n                                                                               assimilation_times))\n                                                                     )","key":"WaaNWj0NSH"},{"type":"output","id":"gYd-3e5tuGYGAUIbg_ehL","data":[],"key":"VyMVn0Hf21"}],"key":"Gkdj796wwh"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"nodes_of_interest","key":"oNP81pySgm"},{"type":"output","id":"WshcRTtZX70WZQrZWITL7","data":[{"output_type":"execute_result","execution_count":67,"metadata":{},"data":{"text/plain":{"content":"[[2730], [976], [104]]","content_type":"text/plain"}}}],"key":"XV9UO4TtlE"}],"key":"x5pKPOkHWN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, axs = plt.subplots(1,3,figsize=(15,4),\n                       sharey=True\n                       )\nfor axi, NOI in zip(axs, nodes_of_interest):\n    cplt.DA_plot_time_dynamic(results_withDA['df_DA'],\n                              'sw',\n                              NOI,\n                              ax=axi,\n                              keytime='assimilation_times',\n                              )  \n    axi.plot(sw_SOL.index,\n            sw_SOL.iloc[:,NOI],\n            color='r',\n            marker= '.'\n            )","key":"Wg2xs6iQIb"},{"type":"output","id":"sT-I4NwECYxF_Y9XksKvJ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c88d658da22f2ad38e65645aa28956c7","path":"/c88d658da22f2ad38e65645aa28956c7.png"},"text/plain":{"content":"<Figure size 1500x400 with 3 Axes>","content_type":"text/plain"}}}],"key":"vz6gZHpSkb"}],"key":"bJDEaqh1W3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"unique_times = results_withoutDA['df_DA'][\"time\"].unique() -1\nresults_withoutDA['df_DA'][\"assimilation_times\"] = results_withoutDA['df_DA'][\"time\"].map(dict(zip(unique_times, \n                                                                               assimilation_times))\n                                                                     )","key":"NzPDbdmZ0A"},{"type":"output","id":"s1NyupKQ3c8AtK1n6QfNe","data":[],"key":"D542T3jVN0"}],"key":"t3LLYlJkmC"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, axs = plt.subplots(1,3,figsize=(15,3),\n                       sharey=True\n                       )\nfor axi, NOI in zip(axs, nodes_of_interest):\n    cplt.DA_plot_time_dynamic(results_withoutDA['df_DA'],\n                              'sw',\n                              NOI,\n                              ax=axi,\n                              keytime='assimilation_times',\n                              )  \n    axi.plot(sw_SOL.index,\n            sw_SOL.iloc[:,NOI],\n            color='r',\n            marker= '.'\n            )","key":"TE402ljHDI"},{"type":"output","id":"wd11DxdA6Y0hrzvU47aKC","data":[{"ename":"KeyError","evalue":"(slice(None, None, None), [2730])","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)\nCell \u001b[0;32mIn[73], line 12\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m axi, NOI \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mzip\u001b[39m(axs, nodes_of_interest):\n\u001b[1;32m      5\u001b[0m     cplt\u001b[38;5;241m.\u001b[39mDA_plot_time_dynamic(results_withoutDA[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdf_DA\u001b[39m\u001b[38;5;124m'\u001b[39m],\n\u001b[1;32m      6\u001b[0m                               \u001b[38;5;124m'\u001b[39m\u001b[38;5;124msw\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m      7\u001b[0m                               NOI,\n\u001b[1;32m      8\u001b[0m                               ax\u001b[38;5;241m=\u001b[39maxi,\n\u001b[1;32m      9\u001b[0m                               keytime\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124massimilation_times\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     10\u001b[0m                               )  \n\u001b[1;32m     11\u001b[0m     axi\u001b[38;5;241m.\u001b[39mplot(sw_SOL_times,\n\u001b[0;32m---> 12\u001b[0m             sw_SOL[:,NOI],\n\u001b[1;32m     13\u001b[0m             color\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mr\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     14\u001b[0m             marker\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m.\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m     15\u001b[0m             )\n\nFile \u001b[0;32m~/miniconda3/envs/pgCATHY/lib/python3.11/site-packages/pandas-2.2.2-py3.11-linux-x86_64.egg/pandas/core/frame.py:4102\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4100\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m   4101\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[0;32m-> 4102\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mget_loc(key)\n\u001b[1;32m   4103\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[1;32m   4104\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n\nFile \u001b[0;32m~/miniconda3/envs/pgCATHY/lib/python3.11/site-packages/pandas-2.2.2-py3.11-linux-x86_64.egg/pandas/core/indexes/range.py:417\u001b[0m, in \u001b[0;36mRangeIndex.get_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    415\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[1;32m    416\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(key, Hashable):\n\u001b[0;32m--> 417\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key)\n\u001b[1;32m    418\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n\u001b[1;32m    419\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key)\n\n\u001b[0;31mKeyError\u001b[0m: (slice(None, None, None), [2730])"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"b8194f13392043da1b8e00ae67c69db0","path":"/b8194f13392043da1b8e00ae67c69db0.png"},"text/plain":{"content":"<Figure size 1500x300 with 3 Axes>","content_type":"text/plain"}}}],"key":"k1TtvrBSFH"}],"key":"PPVyaqq9Cu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Plot DA performance","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ChA9mmyGQM"}],"identifier":"da_perf","label":"DA_perf","html_id":"da-perf","key":"gTutqcrVwx"}],"key":"GSlatSRDwi"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(2,figsize=[11,4])\ncplt.DA_RMS(results_withDA['df_performance'],'swc',ax=ax)\ncplt.DA_RMS(results_withDA['df_performance'],'swc1',ax=ax)\ncplt.DA_RMS(results_withDA['df_performance'],'swc2',ax=ax)","key":"KzU5EmdAgt"},{"type":"output","id":"MEe-doO6n1EcjSUszlugo","data":[{"name":"stderr","output_type":"stream","text":"/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1465: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"RMSE\" + sensorName] = df_perf_plot[\"RMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1468: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"NMRMSE\" + sensorName] = df_perf_plot[\"NMRMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1471: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.OL = df_perf_plot.OL.astype(\"str\")\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1472: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.dropna(inplace=True)\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1465: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"RMSE\" + sensorName] = df_perf_plot[\"RMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1468: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"NMRMSE\" + sensorName] = df_perf_plot[\"NMRMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1471: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.OL = df_perf_plot.OL.astype(\"str\")\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1472: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.dropna(inplace=True)\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1465: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"RMSE\" + sensorName] = df_perf_plot[\"RMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1468: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot[\"NMRMSE\" + sensorName] = df_perf_plot[\"NMRMSE\" + sensorName].astype(\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1471: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.OL = df_perf_plot.OL.astype(\"str\")\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/plotters/cathy_plots.py:1472: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_perf_plot.dropna(inplace=True)\n"},{"output_type":"execute_result","execution_count":37,"metadata":{},"data":{"text/plain":{"content":"(array([<Axes: xlabel='assimilation #', ylabel='RMSEswc2'>,\n        <Axes: xlabel='assimilation #', ylabel='NMRMSEswc2'>], dtype=object),\n <module 'matplotlib.pyplot' from '/home/z0272571a@CAMPUS.CSIC.ES/miniconda3/envs/pgCATHY/lib/python3.11/site-packages/matplotlib/pyplot.py'>)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"b8530d2d04f90af1ecba62326ef2da1e","path":"/b8530d2d04f90af1ecba62326ef2da1e.png"},"text/plain":{"content":"<Figure size 1100x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"LsUgrs7Mz1"}],"key":"hEKENdxu7e"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Plot parameters convergence","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"oc743yCXCU"}],"identifier":"parm_evol","label":"Parm_evol","html_id":"parm-evol","key":"W4Ae2kHOxQ"}],"key":"avKjYudTuZ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, axs = plt.subplots(2,1,figsize=[11,4],\n                        # sharex=True\n                        )\ncplt.DA_plot_parm_dynamic_scatter(parm = 'ZROOT', \n                                  dict_parm_pert=results['dict_parm_pert'], \n                                  list_assimilation_times = assimilation_times,\n                                  ax=axs[0],\n                                          )   \naxs[0].plot(np.linspace(1,len(assimilation_times), len(assimilation_times)),\n            [POROS_SOL]*len(assimilation_times))\n","key":"xJz710Z9MD"},{"type":"output","id":"Rrnam7FxXM7N4CL7Gbkbt","data":[],"key":"ZG46972aaS"}],"key":"Hpuwe0dgQC"}],"key":"Uh4Whl5uXG"},"references":{"cite":{"order":[],"data":{}}}}