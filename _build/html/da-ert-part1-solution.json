{"kind":"Notebook","sha256":"41fc0ad942866738e1b5aa5413d54a4ab3ab1d560b9a66cfa5a722ecd422fe36","slug":"da-ert-part1-solution","location":"/notebook/DA_ERT_part1_solution.ipynb","dependencies":[],"frontmatter":{"title":"Working with pyCATHY and DA","subtitle":"PART1 - DA and ERT assimilation","github":"https://github.com/BenjMy/ETH_pyCATHY/","authors":[{"nameParsed":{"literal":"Benjamin Mary","given":"Benjamin","family":"Mary"},"name":"Benjamin Mary","orcid":"0000-0001-7199-2885","corresponding":true,"email":"benjamin.mary@ica.csic.es","affiliations":["ICA-CSIC"],"id":"contributors-DA_ERT_part1_solution-generated-uid-0"}],"affiliations":[{"id":"ICA-CSIC","name":"ICA-CSIC"}],"date":"2024/04/12","license":{"content":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"subject":"Tutorial","keywords":[],"exports":[{"format":"ipynb","filename":"DA_ERT_part1_solution.ipynb","url":"/build/DA_ERT_part1_solutio-be729fa2405934db6b6fd5eac7c6cdaa.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"mystDirective","name":"toc","args":"Table of Contents","value":":depth: 3","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"key":"jqbDKWKSZu"}],"key":"sBsxoWFLif"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import pyCATHY\nfrom pyCATHY import cathy_tools\nfrom pyCATHY.ERT import petro_Archie as Archie\nfrom pyCATHY.importers import cathy_inputs as in_CT\nimport pyCATHY.meshtools as cathy_meshtools\n\nimport utils","key":"uyIoOWuKvJ"},{"type":"output","id":"clq0E49LdqayqUs_GlY6i","data":[{"ename":"ModuleNotFoundError","evalue":"No module named 'pyCATHY'","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)\nCell \u001b[0;32mIn[1], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpyCATHY\u001b[39;00m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpyCATHY\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m cathy_tools\n\u001b[1;32m      3\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpyCATHY\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mERT\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m petro_Archie \u001b[38;5;28;01mas\u001b[39;00m Archie\n\n\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'pyCATHY'"}],"key":"pvm9BX7GBS"}],"key":"LfSCtWjUrV"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import pygimli as pg\nfrom pygimli.physics import ert\nimport pygimli.meshtools as mt","key":"lUV2KIZ8Pu"},{"type":"output","id":"89BKPHEp3aZBjW-aQL8aS","data":[],"key":"MtG7v44vnM"}],"key":"nMtSRHC0uG"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport numpy as np\nimport pyvista as pv\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n# set some default plotting parameters for nicer looking plots\nmpl.rcParams.update({\"axes.grid\":True, \n                     \"grid.color\":\"gray\", \n                     \"grid.linestyle\":'--',\n                     'figure.figsize':(10,10)}\n                   )\nimport pandas as pd","key":"xgU3Y8FcNi"},{"type":"output","id":"lG8XlV_jWvGFbZmrCSTdB","data":[],"key":"iCbJ3Ewczt"}],"key":"eMeYkWLWev"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We build a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FvWzruVyqN"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"twin simulation experiment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MXjjmHTNyK"}],"key":"Nep1irNwqu"},{"type":"text","value":" which means that the field observations are generated from a synthetic hydrological model of reference. Here the model mesh is based on Weill et al, a 3D regular slope (structured mesh). The atmospheric conditions describe a rain event followed by drainage and ET. Two ERT profiles (unstructured 2D mesh) are defined in both longitudinal and transversal direction of the hydrological mesh. The saturation predicted is interpolated into the ERT meshes and then converted into apparent resistivities using Archie law to generated the observations. To account for typical field errors, the apparent resistivities are noised.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rB8Q7VYnLX"}],"key":"mmnSpDMkXx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The notebooks does ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"i24upXttLQ"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JsTpLKdkD7"}],"key":"x8IJdUDCNY"},{"type":"text","value":" describe:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BJDUkRfG3M"}],"key":"f26wHOWigt"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Preprocessing step","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"uUJ66AKjLk"}],"key":"Xx12wVNrJX"},{"type":"text","value":": build a mesh, inputs preparations, ...","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"dFpkPa59zu"}],"key":"qyTYw9AANY"}],"key":"iO10rDe9Lj"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"The notebooks describe:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"QLC6vg4NhN"}],"key":"T8hhJZPgdT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Create ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"S7ynitCnME"},{"type":"crossReference","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"synthetic ERT dataset","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"z7oAMXpBed"}],"identifier":"fwd_mod_sol","label":"fwd_mod_sol","kind":"heading","template":"{name}","resolved":true,"html_id":"fwd-mod-sol","key":"xZmQIGZ0vA"}],"key":"s0DhCiSHU0"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Add ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"stRGPSXsH3"},{"type":"link","url":"#add_noise_ERT","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"noise","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"XGkeMFK1r5"}],"urlSource":"#add_noise_ERT","key":"iD1zaTAszH"},{"type":"text","value":".","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"lSjfR34tRx"}],"key":"sCwJT2iKy3"}],"key":"zjy3WIxFtS"}],"key":"PLC84hQkMb"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a pyCATHY object","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aUQe0tuSCb"}],"identifier":"create-a-pycathy-object","label":"Create a pyCATHY object","html_id":"create-a-pycathy-object","implicit":true,"key":"gTl8AcxFTD"}],"key":"v8d8pxtBjU"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Create a CATHY project\n# -----------------------\nsimu_solution = cathy_tools.CATHY(\n                                    dirName='./solution_ERT',\n                                    prj_name= 'ERT_dataset',\n                                    notebook=True,\n                                  )\n\nsimu_solution.create_mesh_vtk()","key":"krSx0SX6Eh"},{"type":"output","id":"DHnCkv-R1lPcFIo_dEy_0","data":[{"ename":"NameError","evalue":"name 'cathy_tools' is not defined","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[0;32mIn[3], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# Create a CATHY project\u001b[39;00m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;66;03m# -----------------------\u001b[39;00m\n\u001b[0;32m----> 3\u001b[0m simu_solution \u001b[38;5;241m=\u001b[39m \u001b[43mcathy_tools\u001b[49m\u001b[38;5;241m.\u001b[39mCATHY(\n\u001b[1;32m      4\u001b[0m                                     dirName\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m./solution_ERT\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m      5\u001b[0m                                     prj_name\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mERT_dataset\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m      6\u001b[0m                                     notebook\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m,\n\u001b[1;32m      7\u001b[0m                                   )\n\u001b[1;32m      9\u001b[0m simu_solution\u001b[38;5;241m.\u001b[39mcreate_mesh_vtk()\n\n\u001b[0;31mNameError\u001b[0m: name 'cathy_tools' is not defined"}],"key":"tQHkn33JQ3"}],"key":"FaPL85ow5j"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Check the mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lJv8tNQ9fo"}],"identifier":"check-the-mesh","label":"Check the mesh","html_id":"check-the-mesh","implicit":true,"key":"vtcTKxGqfQ"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Problem statement","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jK2XO8zGAI"}],"key":"ROZ8LllHQ1"}],"key":"EWyyOhLxRf"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In this example we use the defaut mesh (from Weill et al.) i.e. a geometry of the idealized hillslope. The domain is 10 m long, 10 m wide, and 10 m deep at its lowest point (i.e., at the outlet). The slopes are 10% and 1% along the x and y directions, respectively. The surface is discretized into 50 × 50 grid cells (i.e., a DEM resolution of 0.2 m). The subsurface domain is discretized vertically into 32 layers of varying thickness, with each layer parallel to the surface except for the last one, which has a flat base.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"syVK80YCoF"}],"key":"z7cQ2jhiQF"}],"key":"AeeBU13tmZ"}],"key":"zKbDtcMzHT"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"","key":"ncqKsvSWo9"},{"type":"output","id":"59-FnUk3pFWJKuGXuqXuU","data":[],"key":"juxJwYMeOv"}],"key":"GCKM1ioc8y"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"meshpath = os.path.join(simu_solution.workdir,\n                        simu_solution.project_name,\n                        'vtk',\n                        simu_solution.project_name + '.vtk'\n                       )\nmeshCATHY = pv.read(meshpath)","key":"aget01T8PW"},{"type":"output","id":"t0JQAKK-7_hHyb6VUIZrP","data":[{"ename":"NameError","evalue":"name 'simu_solution' is not defined","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[0;32mIn[4], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m meshpath \u001b[38;5;241m=\u001b[39m os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mjoin(\u001b[43msimu_solution\u001b[49m\u001b[38;5;241m.\u001b[39mworkdir,\n\u001b[1;32m      2\u001b[0m                         simu_solution\u001b[38;5;241m.\u001b[39mproject_name,\n\u001b[1;32m      3\u001b[0m                         \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mvtk\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m      4\u001b[0m                         simu_solution\u001b[38;5;241m.\u001b[39mproject_name \u001b[38;5;241m+\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m.vtk\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      5\u001b[0m                        )\n\u001b[1;32m      6\u001b[0m meshCATHY \u001b[38;5;241m=\u001b[39m pv\u001b[38;5;241m.\u001b[39mread(meshpath)\n\n\u001b[0;31mNameError\u001b[0m: name 'simu_solution' is not defined"}],"key":"KUQQOmGVJI"}],"key":"RuxhwVbKd8"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"np.linspace(0,86400,10)","key":"yLiqTZGMEU"},{"type":"output","id":"1ZP6zurY1oQFNgE94HVp-","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"array([    0.,  9600., 19200., 28800., 38400., 48000., 57600., 67200.,\n       76800., 86400.])","content_type":"text/plain"}}}],"key":"dsi3nRTUfm"}],"key":"JS2GJj6pMd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Change atmospheric boundary conditions and run simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"X95438n9P3"}],"identifier":"change-atmospheric-boundary-conditions-and-run-simulation","label":"Change atmospheric boundary conditions and run simulation","html_id":"change-atmospheric-boundary-conditions-and-run-simulation","implicit":true,"key":"yDUxfn049f"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A rain event that last 5.3 hours of intensity ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rOhHWPvR8Y"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"4e-7","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"r7JGmTOxBc"}],"key":"UgEOZyGmyN"},{"type":"text","value":" m/s. Then evapotranspiration ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"up81i7DiPX"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"-1e-7","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TZvbz3xo6U"}],"key":"r3ZRxiia3Z"},{"type":"text","value":" m/s.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a4YY9yinmO"}],"key":"elACMyWsA8"}],"key":"LaB8tDaSH3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"netValue = -1e-7\nrain = 4e-7\ntatmbc = list(np.linspace(0,86400,10))\n\nnetValue_list = [netValue]*len(tatmbc)\nnetValue_list[0] = netValue + rain\nnetValue_list[1] = netValue + rain\n\nsimu_solution.update_atmbc(\n                            HSPATM=1,\n                            IETO=0,\n                            time=tatmbc,\n                            # VALUE=[None, None],\n                            netValue=netValue_list,\n                    )\nsimu_solution.update_parm(TIMPRTi=tatmbc)","key":"b0ATqMpWr8"},{"type":"output","id":"6kweOyIjrNf4WlJaUIzgC","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">🔄 <span style=\"font-weight: bold\">Update atmbc</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"🔄 \u001b[1mUpdate atmbc\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">🔄 <span style=\"font-weight: bold\">update parm file </span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"🔄 \u001b[1mupdate parm file \u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">🔄 <span style=\"font-weight: bold\">update parm file </span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"🔄 \u001b[1mupdate parm file \u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #808000; text-decoration-color: #808000\">─────────────────────────────────────────── </span>⚠ warning messages above ⚠<span style=\"color: #808000; text-decoration-color: #808000\"> ────────────────────────────────────────────</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[33m─────────────────────────────────────────── \u001b[0m⚠ warning messages above ⚠\u001b[33m ────────────────────────────────────────────\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #808000; text-decoration-color: #808000; font-weight: bold\">[</span><span style=\"color: #008000; text-decoration-color: #008000\">'Adjusting NPRT with respect to time of interests requested\\n'</span><span style=\"color: #808000; text-decoration-color: #808000; font-weight: bold\">]</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;33m[\u001b[0m\u001b[32m'Adjusting NPRT with respect to time of interests requested\\n'\u001b[0m\u001b[1;33m]\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #808000; text-decoration-color: #808000\">───────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[33m───────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001b[0m\n","content_type":"text/plain"}}}],"key":"TryD2cWUJl"}],"key":"AQFQYuBFaF"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Homogeneoous pressure head initial (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eyEDz2k4CH"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"-1m","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JB91s5jBRZ"}],"key":"Wc5Mrq65K7"},{"type":"text","value":") conditions all over the domain. No ponding.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OOMUcfTTJO"}],"key":"h0FjbHHMfV"}],"key":"gXPSBJ8rbd"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"simu_solution.update_ic(INDP=0,IPOND=0,\n                        pressure_head_ini=-1,\n                        )","key":"LHok2IC5lz"},{"type":"output","id":"re8f6EN1SDirv489RGzgq","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">🔄 <span style=\"font-weight: bold\">Update ic</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"🔄 \u001b[1mUpdate ic\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Single value detected for ic ==&gt; assumming it homogeneous\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"Single value detected for ic ==> assumming it homogeneous\n","content_type":"text/plain"}}}],"key":"CJJbeIRvWF"}],"key":"IC8Y89rtTT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Switching boundary condition set at soil PMIN=-1e25 --> soil process is controlled via Feddes parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Hv6DJfchiR"}],"key":"rniIReq5fL"}],"key":"znoYcoSEcy"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"simu_solution.update_soil(PMIN=-1e25)","key":"lUS7LNsix8"},{"type":"output","id":"YbDZns8jFvwFs6SgMAfwh","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">🔄 <span style=\"font-weight: bold\">Update soil</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"🔄 \u001b[1mUpdate soil\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">homogeneous soil\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"homogeneous soil\n","content_type":"text/plain"}}}],"key":"dU5rG5i3cy"}],"key":"MVwbiK0jPQ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"run prepocessor and processor","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u08pWXXrdU"}],"key":"Qb7zosDrrp"}],"key":"lXx99KGakH"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"simu_solution.run_preprocessor()\nsimu_solution.run_processor(IPRT1=3)\n#simu_solution.run_processor(IPRT1=2,TRAFLAG=0,VTKF=2,)","key":"lWN9E4FI7C"},{"type":"output","id":"Jrtz6sST7yNpYsWkbSap8","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">🍳 <span style=\"font-weight: bold\">gfortran compilation</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"🍳 \u001b[1mgfortran compilation\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">👟 <span style=\"font-weight: bold\">Run preprocessor</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"👟 \u001b[1mRun preprocessor\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">🔄 <span style=\"font-weight: bold\">update parm file </span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"🔄 \u001b[1mupdate parm file \u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">🛠 <span style=\"font-weight: bold\"> Recompile src files</span> <span style=\"font-weight: bold\">[</span>10s<span style=\"font-weight: bold\">]</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"🛠 \u001b[1m Recompile src files\u001b[0m \u001b[1m[\u001b[0m10s\u001b[1m]\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">🍳 <span style=\"font-weight: bold\">gfortran compilation</span> <span style=\"font-weight: bold\">[</span>14s<span style=\"font-weight: bold\">]</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"🍳 \u001b[1mgfortran compilation\u001b[0m \u001b[1m[\u001b[0m14s\u001b[1m]\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008000; text-decoration-color: #008000\">b''</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[32mb''\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">👟 <span style=\"font-weight: bold\">Run processor</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"👟 \u001b[1mRun processor\u001b[0m\n","content_type":"text/plain"}}}],"key":"Ji0BTSARRs"}],"key":"TjcYsrRLgZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create 2D pygimli mesh (on top of CATHY mesh)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IQyijk8JBb"}],"identifier":"create-2d-pygimli-mesh-on-top-of-cathy-mesh","label":"Create 2D pygimli mesh (on top of CATHY mesh)","html_id":"create-2d-pygimli-mesh-on-top-of-cathy-mesh","implicit":true,"key":"n5Qai0SJDT"}],"key":"ioBXJD0Fle"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"dem_mat, str_hd_dem = in_CT.read_dem(\n                                    os.path.join(simu_solution.workdir, \n                                                 simu_solution.project_name, \n                                                 \"prepro/dem\"),\n                                    os.path.join(simu_solution.workdir, \n                                                 simu_solution.project_name, \n                                                 \"prepro/dtm_13.val\"),\n                                    )\n\n\nidC = 8\nidL = 8\n\nminmax_dem_mat_Ci = [min(dem_mat[:,idC]), max(dem_mat[:,idC])]\nminmax_dem_mat_Li = [min(dem_mat[idL,:]), max(dem_mat[idL,:])]\n\ngeomCi = mt.createPolygon([[0.0, -1], [0, minmax_dem_mat_Ci[0]], [10, minmax_dem_mat_Ci[1]], [10, -1]],\n                          isClosed=True, marker=1, area=1e-2)\nmeshCi = mt.createMesh(geomCi, quality=34.3, area=3, smooth=[1, 10])\n\ngeomLi = mt.createPolygon([[0.0, -1], [0, minmax_dem_mat_Li[1]], [10, minmax_dem_mat_Li[0]], [10, -1]],\n                          isClosed=True, marker=1, area=1e-2)\nmeshLi = mt.createMesh(geomLi, quality=34.3, area=3, smooth=[1, 10])\n","key":"qfVzhnrqaN"},{"type":"output","id":"JPTUsYLy-1IXd-g5l1uUj","data":[],"key":"q773b2SXTM"}],"key":"r4Q30R3yso"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"dem_mat","key":"WT8qxhEkjt"},{"type":"output","id":"YwLOC-e2Q3NU5ZUUL6Mg2","data":[{"ename":"NameError","evalue":"name 'dem_mat' is not defined","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[0;32mIn[1], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mdem_mat\u001b[49m\n\n\u001b[0;31mNameError\u001b[0m: name 'dem_mat' is not defined"}],"key":"bZidOLnIJX"}],"key":"tyy59hKD38"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"pg.show(meshLi)","key":"biCqtA81rn"},{"type":"output","id":"WpfkH7pAemBMc-s9URKGt","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"(<Axes: >, None)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"42253b7790854f5ca3a2a2f4d72aaea0","path":"/build/42253b7790854f5ca3a2a2f4d72aaea0.png"},"text/plain":{"content":"<Figure size 1000x1000 with 1 Axes>","content_type":"text/plain"}}}],"key":"ZR6DwqXxI9"}],"key":"lVn5xAYlpw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Export and read with pyvista","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TWY7wDwJkl"}],"identifier":"export-and-read-with-pyvista","label":"Export and read with pyvista","html_id":"export-and-read-with-pyvista","implicit":true,"key":"gOKRsuCwTM"}],"key":"N07qJmxQO8"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"\nmeshCi.exportVTK('meshCi.vtk')\nmeshCiPG_PGref = pv.read('meshCi.vtk')\n\nmeshLi.exportVTK('meshLi.vtk')\nmeshLiPG_PGref = pv.read('meshLi.vtk')\n\n\n(meshCiPG, meshLiPG) = utils.define_mesh_transformations(meshCiPG_PGref,\n                                                      meshLiPG_PGref,\n                                                      idC=10, \n                                                      idL=10,\n                                                    )\nmeshCiPG","key":"FGxKWgLr8S"},{"type":"output","id":"XJQGU9bN0nm2qdDBAD3xV","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/html":{"content":"<table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n<table style='width: 100%;'>\n<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n<tr><td>N Cells</td><td>3270</td></tr>\n<tr><td>N Points</td><td>1733</td></tr>\n<tr><td>X Bounds</td><td>5.000e+00, 5.000e+00</td></tr>\n<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+01</td></tr>\n<tr><td>Z Bounds</td><td>-1.000e+00, 9.200e-01</td></tr>\n<tr><td>N Arrays</td><td>1</td></tr>\n</table>\n\n</td><td>\n<table style='width: 100%;'>\n<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n<tr><td><b>Marker</b></td><td>Cells</td><td>float64</td><td>1</td><td>1.000e+00</td><td>1.000e+00</td></tr>\n</table>\n\n</td></tr> </table>","content_type":"text/html"},"text/plain":{"content":"UnstructuredGrid (0x7fd728f14100)\n  N Cells:    3270\n  N Points:   1733\n  X Bounds:   5.000e+00, 5.000e+00\n  Y Bounds:   0.000e+00, 1.000e+01\n  Z Bounds:   -1.000e+00, 9.200e-01\n  N Arrays:   1","content_type":"text/plain"}}}],"key":"CsC9cAqrqK"}],"key":"BCRO3c0j5Z"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"pl = pv.Plotter()\npl.add_mesh(meshCiPG)\npl.add_mesh(meshLiPG)\npl.add_mesh(meshCATHY,opacity=0.5)\npl.show_grid()\npl.show()","key":"JHsK6RRv74"},{"type":"output","id":"GKz7_nBfLARQW72c0klSl","data":[{"output_type":"display_data","metadata":{},"data":{"image/jpeg":{"content_type":"image/jpeg","hash":"a45549dac53929422ea8de6a89181154","path":"/build/a45549dac53929422ea8de6a89181154.jpeg"},"image/png":{"content_type":"image/png","hash":"7684bbf92cd93473f34b0f8f79aae193","path":"/build/7684bbf92cd93473f34b0f8f79aae193.png"},"text/plain":{"content":"<PIL.Image.Image image mode=RGB size=1024x768>","content_type":"text/plain"}}}],"key":"LH3m6bf9mK"}],"key":"QFiL1bbAxA"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Interpolate CATHY mesh on PG mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HRmb6Tt45c"}],"identifier":"interpolate-cathy-mesh-on-pg-mesh","label":"Interpolate CATHY mesh on PG mesh","html_id":"interpolate-cathy-mesh-on-pg-mesh","implicit":true,"key":"fnInW7UugN"}],"key":"JIeQI5mGVl"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"ERT_meta_dict_meshLi={\n                'forward_mesh_vtk_file': 'meshLi.vtk',\n                'mesh_nodes_modif': meshLiPG.points\n}\n\nERT_meta_dict_meshCi={\n                'forward_mesh_vtk_file': 'meshCi.vtk',\n                'mesh_nodes_modif': meshCiPG.points\n}\n\n\nmeshpath = os.path.join(simu_solution.workdir,\n                        simu_solution.project_name,\n                        'vtk',\n                        '110.vtk'\n                       )\nmeshCATHY = pv.read(meshpath)\n\np = pv.Plotter(notebook=True)\np.add_mesh(meshCATHY, scalars='saturation',show_edges=True)\n_ = p.add_bounding_box(line_width=5, color=\"black\")\ncpos = p.show()","key":"I2YaCgxWry"},{"type":"output","id":"R_4sJIGR7zZg69FSl81sb","data":[{"output_type":"display_data","metadata":{},"data":{"image/jpeg":{"content_type":"image/jpeg","hash":"bde31368731a2b0d220de1c4ab6991ce","path":"/build/bde31368731a2b0d220de1c4ab6991ce.jpeg"},"image/png":{"content_type":"image/png","hash":"88dee8b4ff3677c374d65968b50e7f60","path":"/build/88dee8b4ff3677c374d65968b50e7f60.png"},"text/plain":{"content":"<PIL.Image.Image image mode=RGB size=1024x768>","content_type":"text/plain"}}}],"key":"XlLLZktYoT"}],"key":"SjpVA4BZun"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Forward modelling of ER apparent datasets","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OoUwZWybCq"}],"identifier":"forward-modelling-of-er-apparent-datasets","label":"Forward modelling of ER apparent datasets","html_id":"forward-modelling-of-er-apparent-datasets","implicit":true,"key":"UGu0HmO7hR"}],"key":"gnRM9qi6nz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create ERT scheme","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MNSiUAJtN7"}],"identifier":"create-ert-scheme","label":"Create ERT scheme","html_id":"create-ert-scheme","implicit":true,"key":"zdeFllbn3C"}],"key":"N9Pclfd1A2"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"scheme = ert.createData(elecs=np.linspace(start=0, \n                                          stop=10, \n                                          num=72),\n                           schemeName='dd')","key":"xWbK7iDAvn"},{"type":"output","id":"8w_v0ewjErZsCnN3SU8BV","data":[],"key":"IRJdWAbLq5"}],"key":"dVt6FUqOwk"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define Archie Parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DLWddiTXzJ"}],"identifier":"define-archie-parameters","label":"Define Archie Parameters","html_id":"define-archie-parameters","implicit":true,"key":"Z04vninZ3d"}],"key":"bSxRhdu8M7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"sc = {}\nrFluid_Archie = 1/(588*(1e-6/1e-2))\nsc = {\n    \"POROS\": [simu_solution.soil_SPP['SPP_map']['POROS'].mean()],\n    \"rFluid_Archie\": [rFluid_Archie],\n    \"a_Archie\": [0.3],\n    \"m_Archie\": [1.7],\n    \"n_Archie\": [1.7],\n    \"pert_sigma_Archie\": [0],\n}","key":"SGq9IonDI8"},{"type":"output","id":"GGyq8mkwce25dX9HxhYiU","data":[],"key":"qrPiDgUipf"}],"key":"yehXsoum0I"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"ERT simulate","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AFf8GWoL1w"}],"identifier":"fwd_mod_sol","label":"fwd_mod_sol","html_id":"fwd-mod-sol","key":"qa38iYTcrD"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Steps:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"uIavmmRcYD"}],"key":"ukdAl9Hhrs"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Read the hydrological mesh containing the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Wq0STkhfGu"},{"type":"inlineCode","value":"saturation","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lVm1VBojm3"},{"type":"text","value":" water","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"zx0VWORUPV"}],"key":"IFaNICY9V2"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Interpolate the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"CTr2SMHCp0"},{"type":"inlineCode","value":"saturation","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"CS9icL6SHl"},{"type":"text","value":" to pygimli mesh","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Vv3usJQFpr"}],"key":"b6gW5UJQOg"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Convert saturation to electrical resistivity (","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"gbsIopdc7Z"},{"type":"inlineCode","value":"ER_hydro","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"TsFLieVy5P"},{"type":"text","value":") using ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"MkUt9Gfa2a"},{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Archie’s law","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"OelzKswYtF"}],"key":"de8smO1owU"}],"key":"UVaDJpxIFC"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Simulate Apparent resistivities (","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"MGPz5rQUUk"},{"type":"inlineCode","value":"ERa","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"JFd59lk61K"},{"type":"text","value":") using the ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"i7FeZBzMsh"},{"type":"inlineCode","value":"ER_hydro","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"G9tPeLw9Ro"},{"type":"text","value":" as resistivity map","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"sUtTSdWEhS"}],"key":"SwZmcmwqqa"}],"key":"SxclK9WvKR"}],"key":"xs1Xs0YSl4"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"mesh2use = pg.load(mesh['forward_mesh_vtk_file'])\nmesh2use","key":"r346Q6oAmE"},{"type":"output","id":"DG7XgS6N6xNaM20Lrjbup","data":[{"output_type":"execute_result","execution_count":29,"metadata":{},"data":{"text/plain":{"content":"Mesh: Nodes: 1837 Cells: 3459 Boundaries: 5295\nMesh contains data: Marker","content_type":"text/plain"}}}],"key":"e8nkZM4iTi"}],"key":"Wh8bWnVQVJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"for mesh_dir_i in ['meshLi','meshCi']:\n    #mesh = eval('ERT_meta_dict_'+ mesh_dir_i)['forward_mesh_vtk_file']\n    mesh = pg.load(eval('ERT_meta_dict_'+ mesh_dir_i)['forward_mesh_vtk_file'])\n    print('+'*20)   \n    for i in range(len(tatmbc)):\n        # read in CATHY mesh data\n        # ------------------------------------------------------------------------\n        path_CATHY = os.path.join(simu_solution.workdir, \n                                  simu_solution.project_name , \n                                  'vtk/'\n                                  )\n        if i<10:    \n            filename = \"10\" + str(i) + \".vtk\"\n        elif i<100:\n            filename = \"1\" + str(i) + \".vtk\"\n        \n        meshCATHY = pv.read(path_CATHY+filename)       \n        mesh_PG_withSaturation, scalar_new = cathy_meshtools.CATHY_2_pg(meshCATHY,\n                                                                        eval('ERT_meta_dict_'+ mesh_dir_i),\n                                                                          # show=True,\n                                                                          )\n        saturation = np.array(mesh_PG_withSaturation[scalar_new])\n        ER_converted_ti_noNoise = Archie.Archie_rho_DA(\n                                                       sat = [saturation],\n                                                       rFluid_Archie=sc['rFluid_Archie'], \n                                                       porosity=sc['POROS'], \n                                                       a_Archie=sc['a_Archie'], \n                                                       m_Archie=sc['m_Archie'], \n                                                       n_Archie=sc['n_Archie'],\n                                                   pert_sigma_Archie=[0]\n                                                   )\n        rhomap = np.array(ER_converted_ti_noNoise)\n\n        data = ert.simulate(mesh, \n                            scheme=scheme, \n                            res=rhomap, \n                            noiseLevel=1,\n                            noiseAbs=1e-6, \n                            seed=1337\n                            )\n        data.save('ERTsolution/' + mesh_dir_i + str(i) + '.data')","key":"KB7hfqGv50"},{"type":"output","id":"9VGRV_6IYrJeMFWmYKoRm","data":[{"name":"stdout","output_type":"stream","text":"++++++++++++++++++++\nMesh: Nodes: 1837 Cells: 3459 Boundaries: 5295\nMesh contains data: Marker\nmin 0.42011550068855286, max 0.42011550068855286, median 0.42011550068855286 \nadd new attribute to pg mesh\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.57445</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.57445\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nrelativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\n"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:02 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000066931852358 : 0.6830159673663084\n"},{"name":"stdout","output_type":"stream","text":"Found datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00672828 s\nFOP updating mesh dependencies ... 1.128e-06 s\nCalculating response for model: min = 61.5745 max = 61.5745\nAllocating memory for primary potential...... 0.000999262\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00702344 s\nFOP updating mesh dependencies ... 1.012e-06 s\nForward: time: 0.803023s\nInterpolating to secondary mesh\n\n1min 0.42011550068855286, max 0.42011550068855286, median 0.42011550068855286 \nadd new attribute to pg mesh\n1296 \t/ 1296\nForward: time: 1.32442s\nResponse: min = 0.225742 max = 60.9502 mean = 32.6262\nReciprocity rms(modelReciprocity) 8.54071%, max: 142.509%\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.57445</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.57445\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:03 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000066931852205 : 0.6830159673663084\n"},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.0070678 s\nFOP updating mesh dependencies ... 1.023e-06 s\nCalculating response for model: min = 61.5744 max = 61.5745\nAllocating memory for primary potential...... 0.000984652\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.0069421 s\nFOP updating mesh dependencies ... 1.175e-06 s\nForward: time: 0.817187s\nInterpolating to secondary mesh\n\n1relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\n684 \tmin 0.42011550068855286, max 0.42011550068855286, median 0.42011550068855286 \nadd new attribute to pg mesh\n8/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n934 \t/ 1296"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"1246 \t/ 1296"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"1296 \t/ 1296\nForward: time: 1.3345s\nResponse: min = 0.225742 max = 60.9502 mean = 32.6262\nReciprocity rms(modelReciprocity) 8.54071%, max: 142.509%\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.57445</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.57445\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nrelativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100Found Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00728915 s\nFOP updating mesh dependencies ... 9.31e-07 s\nCalculating response for model: min = 46.5426 max = 61.5745\nAllocating memory for primary potential...... 0.00101749\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00671686 s\nFOP updating mesh dependencies ... 9.54e-07 s\nForward: time: 0.825162s\nInterpolating to secondary mesh\n\n96 \t/ 1296"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:05 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.0100000668901353 : 0.715468383304138\n"},{"name":"stdout","output_type":"stream","text":"\n8min 0.4199317991733551, max 0.4199317991733551, median 0.42011550068855286 \nadd new attribute to pg mesh\n930 \t/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n1089 \t/ 1296"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"1296 \t/ 1296\nForward: time: 1.34793s\nResponse: min = 0.215454 max = 60.9478 mean = 31.246\nReciprocity rms(modelReciprocity) 8.54378%, max: 142.49%\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.620255</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.620255\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:06 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000066860168603 : 0.7168646631886637\n"},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nrelativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00732537 s\nFOP updating mesh dependencies ... 9.28e-07 s\nCalculating response for model: min = 46.9318 max = 61.6203\nAllocating memory for primary potential...... 0.000997142\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00667828 s\nFOP updating mesh dependencies ... 1.033e-06 s\nForward: time: 0.807445s\nInterpolating to secondary mesh\n\n684 min 0.41847458481788635, max 0.41847458481788635, median 0.4201153814792633 \nadd new attribute to pg mesh\n934 /home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n1016 \t/ 1296"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"1296 \t/ 1296\nForward: time: 1.32379s\nResponse: min = 0.215029 max = 60.9731 mean = 31.1921\nReciprocity rms(modelReciprocity) 8.54525%, max: 142.5%\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.98547</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.98547\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:08 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000066610639723 : 0.7103055018695248\n"},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.0071551 s\nFOP updating mesh dependencies ... 1.023e-06 s\nCalculating response for model: min = 49.0413 max = 61.9855\nAllocating memory for primary potential...... 0.00107325\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00681154 s\nFOP updating mesh dependencies ... 1.053e-06 s\nForward: time: 0.802567s\nInterpolating to secondary mesh\n\n5 \t/relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\n1296 \t/ 1296/ 1296\t/ 1296\t/ 1296\nForward: time: 1.32188s\nResponse: min = 0.217017 max = 61.2146 mean = 31.4758\nReciprocity rms(modelReciprocity) 8.54492%, max: 142.482%\nmin 0.4170287549495697, max 0.4170287549495697, median 0.4201071262359619 \nadd new attribute to pg mesh\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">62.351254</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m62.351254\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\n"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:09 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000066358472243 : 0.7052902650288719\n"},{"name":"stdout","output_type":"stream","text":"relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00701916 s\nFOP updating mesh dependencies ... 9.65e-07 s\nCalculating response for model: min = 50.5304 max = 62.3513\nAllocating memory for primary potential...... 0.00106137\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.0069248 s\nFOP updating mesh dependencies ... 1.373e-06 s\nForward: time: 0.802189s\nInterpolating to secondary mesh\n\n85min 0.4155186116695404, max 0.4155186116695404, median 0.42009788751602173 \nadd new attribute to pg mesh\n934 \t//home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n1170 \t/ 1296"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"1296 \t/ 1296\nForward: time: 1.31561s\nResponse: min = 0.21858 max = 61.459 mean = 31.7018\nReciprocity rms(modelReciprocity) 8.54446%, max: 142.46%\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">62.736977</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m62.736977\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\n"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:10 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.01000006610530591 : 0.7007754656583247\n"},{"name":"stdout","output_type":"stream","text":"Found datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00827759 s\nFOP updating mesh dependencies ... 9.5e-07 s\nCalculating response for model: min = 51.7557 max = 62.737\nAllocating memory for primary potential...... 0.00113652\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00691406 s\nFOP updating mesh dependencies ... 9.16e-07 s\nForward: time: 0.79745s\nInterpolating to secondary mesh\n\n10 \t/ 1relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\n1247 \tmin 0.4139118790626526, max 0.4139118790626526, median 0.4200696647167206 \nadd new attribute to pg mesh\n1296 \t/ 1296\nForward: time: 1.31669s\nResponse: min = 0.219991 max = 61.7064 mean = 31.9109\nReciprocity rms(modelReciprocity) 8.54389%, max: 142.435%\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">63.151543</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m63.151543\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\n"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:12 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000065851625004 : 0.6965074583971271\n"},{"name":"stdout","output_type":"stream","text":"relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100Found datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00691862 s\nFOP updating mesh dependencies ... 9.75e-07 s\nCalculating response for model: min = 52.8622 max = 63.1515\nAllocating memory for primary potential...... 0.00102692\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00913536 s\nFOP updating mesh dependencies ... 1.152e-06 s\nForward: time: 0.80031s\nInterpolating to secondary mesh\n\n10 \t 1296\n1296 \t/ 1296\nForward: time: 1.32087s\nResponse: min = 0.221357 max = 61.9566 mean = 32.112\nReciprocity rms(modelReciprocity) 8.54327%, max: 142.409%\nmin 0.412288099527359, max 0.412288099527359, median 0.4200182259082794 \nadd new attribute to pg mesh\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">63.574947</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m63.574947\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nrelativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00705008 s\nFOP updating mesh dependencies ... 1.03e-06 s\nCalculating response for model: min = 53.9225 max = 63.5749\nAllocating memory for primary potential...... 0.00103039\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00665021 s\nFOP updating mesh dependencies ... 1.041e-06 s\nForward: time: 0.801645s\nInterpolating to secondary mesh\n\n100 \t/ 1296 1296"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:13 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.01000006559763064 : 0.692408234493022\n"},{"name":"stdout","output_type":"stream","text":"767 \t/ 12min 0.41065099835395813, max 0.41065099835395813, median 0.4199320077896118 \nadd new attribute to pg mesh\n934 \t/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n1093 \t/ 1296"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"1296 \t/ 1296\nForward: time: 1.31616s\nResponse: min = 0.222677 max = 62.2093 mean = 32.3086\nReciprocity rms(modelReciprocity) 8.54261%, max: 142.381%\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">64.00641</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m64.00641\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:15 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000065343455931 : 0.6884497216271596\n"},{"name":"stdout","output_type":"stream","text":"relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00699784 s\nFOP updating mesh dependencies ... 9.75e-07 s\nCalculating response for model: min = 54.957 max = 64.0064\nAllocating memory for primary potential...... 0.000991612\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 7132\tCells: 3459\tBoundaries: 5295\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00663669 s\nFOP updating mesh dependencies ... 1.175e-06 s\nForward: time: 0.802918s\nInterpolating to secondary mesh\n\n350 \t/ 1296\n767 \t/ 12++++++++++++++++++++\nMesh: Nodes: 1733 Cells: 3270 Boundaries: 5002\nMesh contains data: Marker\n1296 \t/ 1296\nForward: time: 1.31767s\nResponse: min = 0.223967 max = 62.4644 mean = 32.5024\nReciprocity rms(modelReciprocity) 8.54192%, max: 142.352%\nmin 0.42011550068855286, max 0.42011550068855286, median 0.42011550068855286 \nadd new attribute to pg mesh\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.57445</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.57445\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nrelativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\n"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:16 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000069993039522 : 0.6681229403151666\n"},{"name":"stdout","output_type":"stream","text":"Found datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00650665 s\nFOP updating mesh dependencies ... 1.008e-06 s\nCalculating response for model: min = 61.5745 max = 61.5745\nAllocating memory for primary potential...... 0.000945231\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00650795 s\nFOP updating mesh dependencies ... 1.232e-06 s\nForward: time: 0.750018s\nInterpolating to secondary mesh\n\n850 \t/ 1296min 0.42011550068855286, max 0.42011550068855286, median 0.42011550068855286 \nadd new attribute to pg mesh\n1/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n1296 \t/ 1296\nForward: time: 1.2363s\nFound neg. resp (saving).\n10 -10.9309 121.317\n10 11 12 13\nResponse: min = -10.9309 max = 58.3753 mean = 33.056\nReciprocity rms(modelReciprocity) 12.6434%, max: 221.961%\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.57445</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.57445\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:17 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000069993039387 : 0.6681229403151666\n"},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nrelativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00651078 s\nFOP updating mesh dependencies ... 9.59e-07 s\nCalculating response for model: min = 61.5744 max = 61.5745\nAllocating memory for primary potential...... 0.000940038\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00653697 s\nFOP updating mesh dependencies ... 1.133e-06 s\nForward: time: 0.758352s\nInterpolating to secondary mesh\n\n109min 0.42011550068855286, max 0.42011550068855286, median 0.42011550068855286 \nadd new attribute to pg mesh\n11/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n1296 \t/ 1296\nForward: time: 1.24445s\nFound neg. resp (saving).\n10 -10.9309 121.317\n10 11 12 13\nResponse: min = -10.9309 max = 58.3753 mean = 33.056\nReciprocity rms(modelReciprocity) 12.6434%, max: 221.961%\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.57445</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.57445\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\n"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:19 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000069949357026 : 0.6983037033402413\n"},{"name":"stdout","output_type":"stream","text":"relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00667411 s\nFOP updating mesh dependencies ... 9.85e-07 s\nCalculating response for model: min = 47.5437 max = 61.5745\nAllocating memory for primary potential...... 0.000935361\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00594942 s\nFOP updating mesh dependencies ... 1.145e-06 s\nForward: time: 0.753867s\nInterpolating to secondary mesh\n\n109min 0.4199254512786865, max 0.4199254512786865, median 0.42011547088623047 \nadd new attribute to pg mesh\n1/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n1296 \t/ 1296\nForward: time: 1.23797s\nFound neg. resp (saving).\n10 -10.7085 119.48\n10 11 12 13\nResponse: min = -10.7085 max = 58.3997 mean = 31.7058\nReciprocity rms(modelReciprocity) 12.6547%, max: 221.771%\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.621834</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.621834\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:20 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.01000006992401294 : 0.6996320943152047\n"},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nrelativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00659944 s\nFOP updating mesh dependencies ... 9.08e-07 s\nCalculating response for model: min = 47.5924 max = 61.6218\nAllocating memory for primary potential...... 0.000930882\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00598799 s\nFOP updating mesh dependencies ... 8.22e-07 s\nForward: time: 0.754653s\nInterpolating to secondary mesh\n\n1296 \t/ 1296 129696\nForward: time: 1.23818s\nFound neg. resp (saving).\n10 -10.6741 119.135\n10 11 12 13\nResponse: min = -10.6741 max = 58.424 mean = 31.6474\nReciprocity rms(modelReciprocity) 12.6556%, max: 221.767%\nmin 0.41841819882392883, max 0.41841819882392883, median 0.42011159658432007 \nadd new attribute to pg mesh\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">61.999672</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m61.999672\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\n"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:21 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000069744824064 : 0.6934394056575778\n"},{"name":"stdout","output_type":"stream","text":"relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100Found datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00658454 s\nFOP updating mesh dependencies ... 9.25e-07 s\nCalculating response for model: min = 49.533 max = 61.9997\nAllocating memory for primary potential...... 0.000912962\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00610962 s\nFOP updating mesh dependencies ... 1.11e-06 s\nForward: time: 0.756512s\nInterpolating to secondary mesh\n\n10 \t 1296\n1093 min 0.41692665219306946, max 0.41692665219306946, median 0.4201018214225769 \nadd new attribute to pg mesh\n1296 \t/ 1296\nForward: time: 1.23869s\nFound neg. resp (saving).\n10 -10.7657 120.063\n10 11 12 13\nResponse: min = -10.7657 max = 58.6051 mean = 31.9265\nReciprocity rms(modelReciprocity) 12.6548%, max: 221.811%\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">62.37721</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m62.37721\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:23 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000069563701848 : 0.6886894972256857\n"},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.0066617 s\nFOP updating mesh dependencies ... 9.54e-07 s\nCalculating response for model: min = 50.9076 max = 62.3772\nAllocating memory for primary potential...... 0.000923119\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.0060019 s\nFOP updating mesh dependencies ... 9.19e-07 s\nForward: time: 0.76534s\nInterpolating to secondary mesh\n\n10 \t/ relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\n1170 \tmin 0.41544485092163086, max 0.41544485092163086, median 0.4200763404369354 \nadd new attribute to pg mesh\n1296 \t/ 1296\nForward: time: 1.25128s\nFound neg. resp (saving).\n10 -10.8549 120.991\n10 11 12 13\nResponse: min = -10.8549 max = 58.7883 mean = 32.1503\nReciprocity rms(modelReciprocity) 12.6543%, max: 221.846%\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">62.7559</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m62.7559\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:24 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.01000006938189946 : 0.6844147805843002\n"},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00663511 s\nFOP updating mesh dependencies ... 1.025e-06 s\nCalculating response for model: min = 52.0858 max = 62.7559\nAllocating memory for primary potential...... 0.00106768\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00738755 s\nFOP updating mesh dependencies ... 9.73e-07 s\nForward: time: 0.789908s\nInterpolating to secondary mesh\n\n1relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\n434 \tmin 0.41396546363830566, max 0.41396546363830566, median 0.42003926634788513 \nadd new attribute to pg mesh\n517 \t/ 12/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n767 \t/ 1296"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"1093 \t/ 1296"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"1296 \t/ 1296\nForward: time: 1.28174s\nFound neg. resp (saving).\n10 -10.9451 121.937\n10 11 12 13\nResponse: min = -10.9451 max = 58.9728 mean = 32.3581\nReciprocity rms(modelReciprocity) 12.654%, max: 221.878%\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">63.13765</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m63.13765\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:25 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000069199740004 : 0.6803521509000241\n"},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nrelativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00673215 s\nFOP updating mesh dependencies ... 1.036e-06 s\nCalculating response for model: min = 53.1467 max = 63.1376\nAllocating memory for primary potential...... 0.000937017\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00611381 s\nFOP updating mesh dependencies ... 1.025e-06 s\nForward: time: 0.770197s\nInterpolating to secondary mesh\n\n1296 \t/ 1296\t/ 1296\nForward: time: 1.25724s\nFound neg. resp (saving).\n10 -11.0365 122.9\n10 11 12 13\nResponse: min = -11.0365 max = 59.1586 mean = 32.5583\nReciprocity rms(modelReciprocity) 12.6537%, max: 221.908%\nmin 0.41244715452194214, max 0.41244715452194214, median 0.4199669063091278 \nadd new attribute to pg mesh\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">63.533276</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m63.533276\u001b[0m\n","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\n"},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:27 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.01000006901736031 : 0.6764715730792273\n"},{"name":"stdout","output_type":"stream","text":"Found datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00656294 s\nFOP updating mesh dependencies ... 9.68e-07 s\nCalculating response for model: min = 54.166 max = 63.5333\nAllocating memory for primary potential...... 0.00102124\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00633421 s\nFOP updating mesh dependencies ... 1.182e-06 s\nForward: time: 0.760512s\nInterpolating to secondary mesh\n\n10 \trelativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\n1296 \t/ 1296\nForward: time: 1.24679s\nFound neg. resp (saving).\n10 -11.1292 123.879\n10 11 12 13\nResponse: min = -11.1292 max = 59.3457 mean = 32.7543\nReciprocity rms(modelReciprocity) 12.6535%, max: 221.937%\nmin 0.410819411277771, max 0.410819411277771, median 0.4198721945285797 \nadd new attribute to pg mesh\n/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/ETH_pyCATHY/notebooks/solution_ERTsaturation_nearIntrp2_pg_msh.vtk\nend of CATHY_2_pg\n"},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">See eq. <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.4</span> thesis Isabelle p.<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">95</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"See eq. \u001b[1;36m4.4\u001b[0m thesis Isabelle p.\u001b[1;36m95\u001b[0m\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">max res after Archie\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"max res after Archie\n","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">63.961815</span>\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"\u001b[1;36m63.961815\u001b[0m\n","content_type":"text/plain"}}},{"name":"stderr","output_type":"stream","text":"10/06/24 - 09:34:28 - pyGIMLi - \u001b[0;32;49mINFO\u001b[0m - Data error estimate (min:max)  0.010000068834837271 : 0.6726774160885607\n"},{"name":"stdout","output_type":"stream","text":"ModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00729106 s\nFOP updating mesh dependencies ... 1.067e-06 s\nCalculating response for model: min = 55.162 max = 63.9618\nAllocating memory for primary potential...... 0.00109286\n\nNo primary potential for secondary field calculation with topography.\nCreating P2-Primmesh:\t\tNodes: 6735\tCells: 3270\tBoundaries: 5002\nModellingBase::setMesh() copying new mesh ... Found Neumann domain. Setting topography=1.\nFound Neumann domain. but 2.5D -> neumann: false\nFound datafile: 72 electrodes\nFound: 72 free-electrodes\nrMin = 0.0704225, rMax = 20\nNGauLeg + NGauLag for inverse Fouriertransformation: 14 + 4\nFound non-Neumann domain\n0.00606424 s\nFOP updating mesh dependencies ... 9.41e-07 s\nForward: time: 0.753737s\nInterpolating to secondary mesh\n\n10relativeError set to a value > 0.5 .. assuming this is a percentage Error level dividing them by 100\n1296 \t/ 1296 1296\nForward: time: 1.23941s\nFound neg. resp (saving).\n10 -11.2231 124.872\n10 11 12 13\nResponse: min = -11.2231 max = 59.5339 mean = 32.9477\nReciprocity rms(modelReciprocity) 12.6532%, max: 221.965%\n"}],"key":"f0xz3x21Dk"}],"key":"RtQEPAvp2L"}],"key":"kJTjdaEHfA"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Twin experiments to test DA","url":"/resultsda","group":"Introduction"},"next":{"title":"Working with pyCATHY and DA","url":"/da-ert-part2-runda","group":"Notebook"}}},"domain":"http://localhost:3000"}